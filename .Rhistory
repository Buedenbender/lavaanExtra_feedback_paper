devtools::load_all(".")
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
(indirect <- list(M = "visual",
DV = c("speed", "textual")))
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
(indirect <- list(M = M,
DV = DV))
# Define our variables
(M <- "visual")
(IV <- c("ageyr", "grade"))
(DV <- c("speed", "textual"))
(indirect <- list(M = M,
DV = DV))
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
## Regression example
# Define our regression terms
(regression <- list(mpg = names(mtcars)[2:5],
disp = names(mtcars)[4:7]))
# Load library
library(lavaanExtra)
# Write the model, and check it
mtcars.model <- write_lavaan(regression = regression)
cat(mtcars.model)
# Fit the model with `lavaan`
library(lavaan)
fit.reg <- lavaan(mtcars.model, data = mtcars, auto.var = TRUE)
# Get regression parameters only
lavaan_reg(fit.reg)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_reg(fit.reg, nice_table = TRUE, highlight = TRUE)
# Define latent variables
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
# Write the model, and check it
cfa.model <- write_lavaan(latent = latent)
cat(cfa.model)
# Fit the model with `lavaan`
fit.cfa <- cfa(cfa.model, data = HolzingerSwineford1939)
# Get the summary output
summary(fit.cfa, fit.measures = TRUE)
# Get fit indices
nice_fit(fit.cfa)
# We can get it prettier with the `rempsyc::nice_table` integration
nice_fit(fit.cfa, nice_table = TRUE)
# Calculate scale averages
data <- HolzingerSwineford1939
data$visual <- rowMeans(data[paste0("x", 1:3)])
data$textual <- rowMeans(data[paste0("x", 4:6)])
data$speed <- rowMeans(data[paste0("x", 7:9)])
# Check what we have
head(data)
# Define our variables
(M <- "visual")
(IV <- c("ageyr", "grade"))
(DV <- c("speed", "textual"))
# Define our lavaan lists
(mediation <- list(speed = M,
textual = M,
visual = IV))
(regression <- list(speed = IV,
textual = IV))
(covariance <- list(speed = "textual",
ageyr = "grade"))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance)
cat(model.saturated)
# We can run the model again, setting `label = TRUE` to get the path names
model.path <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.path)
# We check that we have removed "ageyr" correctly from "speed" in the
# regression section. OK.
# Define new indirect effects
(indirect <- list(age_visual_speed = c("speed_a", "visual_a"),
grade_visual_textual = c("textual_a", "visual_b")))
# We run the model again, with the indirect effects
model.path <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.path)
(regression <- list(speed = "grade",
textual = IV))
# We check that we have removed "ageyr" correctly from "speed". OK.
# We can run the model again, setting `label = TRUE` to get the path names
model.path <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.path)
# We check that we have removed "ageyr" correctly from "speed" in the
# regression section. OK.
# Define just our indirect effects of interest
(indirect <- list(age_visual_speed = c("visual_speed", "ageyr_visual"),
grade_visual_textual = c("visual_textual", "grade_visual")))
# We run the model again, with the indirect effects
model.path <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.path)
# We run the model again, with the indirect effects
model.path <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.path)
# Fit the model with `lavaan`
fit.path <- lavaan(model.path, data = data, auto.var = TRUE)
# Get regression parameters only and make it pretty with the `rempsyc::nice_table` integration
lavaan_reg(fit.path, nice_table = TRUE, highlight = TRUE)
# Get covariance indices
lavaan_cov(fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_cov(fit.path, nice_table = TRUE)
# Get fit indices
nice_fit(fit.cfa, fit.saturated, fit.path)
# Calculate scale averages
data <- HolzingerSwineford1939
data$visual <- rowMeans(data[paste0("x", 1:3)])
data$textual <- rowMeans(data[paste0("x", 4:6)])
data$speed <- rowMeans(data[paste0("x", 7:9)])
# Check what we have
head(data)
# Define our variables
(M <- "visual")
(IV <- c("ageyr", "grade"))
(DV <- c("speed", "textual"))
# Define our lavaan lists
(mediation <- list(speed = M,
textual = M,
visual = IV))
(regression <- list(speed = IV,
textual = IV))
(covariance <- list(speed = "textual",
ageyr = "grade"))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance)
cat(model.saturated)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.saturated)
(indirect <- list(ageyr_visual_speed = c("ageyr_visual", "visual_speed"),
ageyr_visual_textual = c("ageyr_visual", "visual_textual"),
grade_visual_speed = c("grade_visual", "visual_speed"),
grade_visual_textual = c("grade_visual", "visual_textual")))
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
label = TRUE, use.letters = TRUE)
cat(model.saturated)
(indirect <- list(ageyr_visual_speed = c("visual_a", "speed_a"),
ageyr_visual_textual = c("visual_a", "textual_a"),
grade_visual_speed = c("visual_b", "speed_a"),
grade_visual_textual = c("visual_b", "textual_a")))
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
(indirect <- list(M = M,
DV = DV))
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
# Fit the model with `lavaan`
fit.saturated <- lavaan(model.saturated, data = data, auto.var = TRUE)
# Get regression parameters only and make it pretty with the `rempsyc::nice_table` integration
lavaan_reg(fit.saturated, nice_table = TRUE, highlight = TRUE)
(regression <- list(speed = "grade",
textual = IV))
# We check that we have removed "ageyr" correctly from "speed". OK.
# We can run the model again, setting `label = TRUE` to get the path names
model.path <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.path)
# We check that we have removed "ageyr" correctly from "speed" in the
# regression section. OK.
# Define just our indirect effects of interest
(indirect <- list(age_visual_speed = c("visual_speed", "ageyr_visual"),
grade_visual_textual = c("visual_textual", "grade_visual")))
# We run the model again, with the indirect effects
model.path <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.path)
# Fit the model with `lavaan`
fit.path <- lavaan(model.path, data = data, auto.var = TRUE)
# Get regression parameters only and make it pretty with the `rempsyc::nice_table` integration
lavaan_reg(fit.path, nice_table = TRUE, highlight = TRUE)
# We only kept significant regressionsâ€”good (for this demo).
# Get covariance indices
lavaan_cov(fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_cov(fit.path, nice_table = TRUE)
# Get fit indices
nice_fit(fit.cfa, fit.saturated, fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
nice_fit(fit.cfa, fit.saturated, fit.path, nice_table = TRUE)
# Let's get the indirect effects only
lavaan_ind(fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_ind(fit.path, nice_table = TRUE)
# Get modification indices only
head(inspect(fit.path, "mi"))
model.latent <- write_lavaan(mediation, regression, covariance,
indirect, latent, label = TRUE, use.letters = TRUE)
cat(model.latent)
model.latent <- write_lavaan(mediation, regression, covariance,
indirect, latent, label = TRUE)
cat(model.latent)
# Run model
fit.latent <- lavaan(model.latent, data = HolzingerSwineford1939, auto.var = TRUE,
auto.fix.first = TRUE, auto.cov.lv.x = TRUE)
# Get fit indices
nice_fit(fit.cfa, fit.saturated, fit.path, fit.latent)
# We can get it prettier with the `rempsyc::nice_table` integration
nice_fit(fit.cfa, fit.saturated, fit.path, fit.latent, nice_table = TRUE)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
devtools::load_all(".")
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
devtools::load_all(".")
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
(indirect <- list(ageyr_visual_speed = c("a_visual", "a_speed"),
ageyr_visual_textual = c("a_visual", "a_textual"),
grade_visual_speed = c("b_visual", "a_speed"),
grade_visual_textual = c("b_visual", "a_textual")))
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
(indirect <- list(M = M,
DV = DV))
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
pkgdown::build_site()
pkgdown::build_site()
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
(regression <- list(ageyr = c("visual", "textual", "speed"),
grade = c("visual", "textual", "speed")))
(mediation <- list(speed = "visual",
textual = "visual",
visual = c("ageyr", "grade")))
(covariance <- list(speed = "textual", ageyr = "grade"))
(indirect <- list(age_visual_speed = c("speed_a", "visual_a"),
grade_visual_textual = c("textual_a", "visual_b")))
HS.model <- write_lavaan(mediation, regression, indirect = indirect,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
(covariance <- list(speed = "textual", ageyr = "grade"))
HS.model <- write_lavaan(mediation, regression, indirect = indirect,
latent = latent, label = TRUE)
cat(HS.model)
HS.model <- write_lavaan(covariance = covariance,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
lavaan_cov(fit)
(regression <- list(ageyr = c("visual", "textual", "speed"),
grade = c("visual", "textual", "speed")))
(covariance <- list(speed = "textual", ageyr = "grade"))
HS.model <- write_lavaan(regression = regression, covariance = covariance,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
lavaan_cov(fit)
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
(regression <- list(ageyr = c("visual", "textual", "speed"),
grade = c("visual", "textual", "speed")))
(covariance <- list(speed = "textual", ageyr = "grade"))
HS.model <- write_lavaan(regression = regression, covariance = covariance,
latent = latent, label = TRUE)
devtools::load_all(".")
HS.model <- write_lavaan(regression = regression, covariance = covariance,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
lavaan_cov(fit)
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
(mediation <- list(speed = "visual",
textual = "visual",
visual = c("ageyr", "grade")))
(indirect <- list(M = M,
DV = DV))
M
(indirect <- list(M = "visual", DV = c("speed", "textual")))
HS.model <- write_lavaan(mediation, regression, indirect = indirect,
latent = latent, label = TRUE)
cat(HS.model)
HS.model <- write_lavaan(mediation, regression, indirect = indirect,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
lavaan_ind(fit)
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
(mediation <- list(speed = "visual",
textual = "visual",
visual = c("ageyr", "grade")))
(indirect <- list(M = "visual", DV = c("speed", "textual")))
devtools::load_all(".")
HS.model <- write_lavaan(mediation, regression, indirect = indirect,
latent = latent, label = TRUE)
HS.model <- write_lavaan(mediation, indirect = indirect,
latent = latent, label = TRUE)
cat(HS.model)
library(lavaan)
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
lavaan_ind(fit)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
?check_outliers
?performancecheck_outliers
?performance::check_outliers
1 - 0.025
stats::qnorm(p = 1 - 0.025)
stats::qnorm(p = 1 - 0.001)
pkgdown::build_site()
?write_lavaan
devtools::load_all(".")
?write_lavaan
pkgdown::build_site()
pkgdown::build_site()
devtools::load_all(".")
## Regression example
# Define our regression terms
(regression <- list(mpg = names(mtcars)[2:5],
disp = names(mtcars)[4:7]))
# Load library
library(lavaanExtra)
# Write the model, and check it
mtcars.model <- write_lavaan(regression = regression)
cat(mtcars.model)
# Fit the model with `lavaan`
library(lavaan)
fit.reg <- lavaan(mtcars.model, data = mtcars, auto.var = TRUE)
# Get regression parameters only
lavaan_reg(fit.reg)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_reg(fit.reg, nice_table = TRUE, highlight = TRUE)
# Define latent variables
(latent <- list(visual = paste0("x", 1:3),
textual = paste0("x", 4:6),
speed = paste0("x", 7:9)))
# Write the model, and check it
cfa.model <- write_lavaan(latent = latent)
cat(cfa.model)
# Fit the model with `lavaan`
fit.cfa <- cfa(cfa.model, data = HolzingerSwineford1939)
# Get the summary output
summary(fit.cfa, fit.measures = TRUE)
# Get fit indices
nice_fit(fit.cfa)
# We can get it prettier with the `rempsyc::nice_table` integration
nice_fit(fit.cfa, nice_table = TRUE)
# Calculate scale averages
data <- HolzingerSwineford1939
data$visual <- rowMeans(data[paste0("x", 1:3)])
data$textual <- rowMeans(data[paste0("x", 4:6)])
data$speed <- rowMeans(data[paste0("x", 7:9)])
# Check what we have
head(data)
# Define our variables
(M <- "visual")
(IV <- c("ageyr", "grade"))
(DV <- c("speed", "textual"))
# Define our lavaan lists
(mediation <- list(speed = M,
textual = M,
visual = IV))
(regression <- list(speed = IV,
textual = IV))
(covariance <- list(speed = "textual",
ageyr = "grade"))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance)
cat(model.saturated)
# We can run the model again. However, we set `label = TRUE` to get the path names
model.saturated <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.saturated)
# Define indirect object
(indirect <- list(ageyr_visual_speed = c("ageyr_visual", "visual_speed"),
ageyr_visual_textual = c("ageyr_visual", "visual_textual"),
grade_visual_speed = c("grade_visual", "visual_speed"),
grade_visual_textual = c("grade_visual", "visual_textual")))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance,
label = TRUE, use.letters = TRUE)
cat(model.saturated)
# Define indirect object
(indirect <- list(ageyr_visual_speed = c("a_visual", "a_speed"),
ageyr_visual_textual = c("a_visual", "a_textual"),
grade_visual_speed = c("b_visual", "a_speed"),
grade_visual_textual = c("b_visual", "a_textual")))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE, use.letters = TRUE)
cat(model.saturated)
# Define indirect object
(indirect <- list(M = M,
DV = DV))
# Write the model, and check it
model.saturated <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.saturated)
# Fit the model with `lavaan`
fit.saturated <- lavaan(model.saturated, data = data, auto.var = TRUE)
# Get regression parameters only and make it pretty with the `rempsyc::nice_table` integration
lavaan_reg(fit.saturated, nice_table = TRUE, highlight = TRUE)
(regression <- list(speed = "grade",
textual = IV))
# We check that we have removed "ageyr" correctly from "speed". OK.
# We can run the model again, setting `label = TRUE` to get the path names
model.path <- write_lavaan(mediation, regression, covariance, label = TRUE)
cat(model.path)
# We check that we have removed "ageyr" correctly from "speed" in the
# regression section. OK.
# Define just our indirect effects of interest
(indirect <- list(age_visual_speed = c("visual_speed", "ageyr_visual"),
grade_visual_textual = c("visual_textual", "grade_visual")))
# We run the model again, with the indirect effects
model.path <- write_lavaan(mediation, regression, covariance,
indirect, label = TRUE)
cat(model.path)
# Fit the model with `lavaan`
fit.path <- lavaan(model.path, data = data, auto.var = TRUE)
# Get regression parameters only and make it pretty with the `rempsyc::nice_table` integration
lavaan_reg(fit.path, nice_table = TRUE, highlight = TRUE)
# Get covariance indices
lavaan_cov(fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_cov(fit.path, nice_table = TRUE)
# Get fit indices
nice_fit(fit.cfa, fit.saturated, fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
nice_fit(fit.cfa, fit.saturated, fit.path, nice_table = TRUE)
# Let's get the indirect effects only
lavaan_ind(fit.path)
# We can get it prettier with the `rempsyc::nice_table` integration
lavaan_ind(fit.path, nice_table = TRUE)
# Get modification indices only
modindices(fit.path, sort = TRUE, maximum.number = 5)
head(inspect(fit.path, "mi"))
?modindices
pkgdown::build_site
pkgdown::build_site()
mtcars
intercept <- list("mpg", "cyl", "disp")
intercept
model.intercept <- write_lavaan(intercept)
cat(model.intercept)
model.intercept <- write_lavaan(intercept= intercept)
cat(model.intercept)
intercept <- c("mpg", "cyl", "disp")
intercept
model.intercept <- write_lavaan(intercept = intercept)
cat(model.intercept)
pkgdown::build_site()
